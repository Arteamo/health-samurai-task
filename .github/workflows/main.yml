name: Build Flow

on: [ push ]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: crud_user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: crud_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup jdk'
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          java-package: jdk
      - name: 'Setup clojure tools'
        uses: DeLaGuardo/setup-clojure@10.2
        with:
          lein: latest
      - name: 'Setup test DB'
        run: psql -U crud_user -h localhost -d crud_test -p 5432 -f init.sql
        working-directory: './backend/resources'
        env:
          PGPASSWORD: password
      - name: 'Restore clojure dependencies'
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          key: cljdeps-${{ hashFiles('backend/project.clj') }}
      - name: 'Build with lein'
        working-directory: './backend'
        run: lein uberjar
      - name: 'Run tests'
        working-directory: './backend'
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: crud_test
        run: lein test
      - name: 'Cache clojure dependencies'
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          key: cljdeps-${{ hashFiles('backend/project.clj') }}
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup npm'
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: 'Restore npm dependencies'
        uses: actions/cache/restore@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('frontend/package-lock.json') }}
      - name: 'Restore clojurescript dependencies'
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          key: cljdeps-${{ hashFiles('frontend/shadow-cljs.edn') }}
      - name: 'Install shadow-cljs'
        working-directory: './frontend'
        run: npm install -g shadow-cljs
      - name: 'Build frontend'
        working-directory: './frontend'
        run: npm run release
      - name: 'Cache npm dependencies'
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('frontend/package-lock.json') }}
      - name: 'Cache clojurescript dependencies'
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          key: cljdeps-${{ hashFiles('frontend/shadow-cljs.edn') }}
